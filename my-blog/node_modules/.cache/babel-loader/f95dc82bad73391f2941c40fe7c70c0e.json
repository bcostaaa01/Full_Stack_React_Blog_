{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Bruno Costa\\\\Desktop\\\\Full_Stack_React_Blog_\\\\my-blog\\\\src\\\\pages\\\\ArticlePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ArticlesList from '../Components/ArticlesList';\nimport NotFoundPage from '../pages/NotFoundPage';\nimport articleContent from './article-content';\n\nconst ArticlePage = ({\n  match\n}) => {\n  _s();\n\n  const name = match.params.name;\n  const article = articleContent.find(article => article.name);\n  const [articleInfo, setArticleInfo] = useState({\n    upvotes: 0,\n    comments: []\n  });\n  useEffect(() => {\n    setArticleInfo({\n      upvotes: 3\n    });\n  });\n  if (!article) return /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 26\n  }, this);\n  const otherArticles = articleContent.filter(article => article.name !== name);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: article.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"This post has been upvoted \", articleInfo.upvotes, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), article.content.map((paragraph, key) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: paragraph\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Other Articles:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ArticlesList, {\n      articles: otherArticles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ArticlePage, \"vBqw9UXGd+fo/cJfkW3Wn4SGnro=\");\n\n_c = ArticlePage;\nexport default ArticlePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticlePage\");","map":{"version":3,"sources":["C:/Users/Bruno Costa/Desktop/Full_Stack_React_Blog_/my-blog/src/pages/ArticlePage.js"],"names":["React","useState","useEffect","ArticlesList","NotFoundPage","articleContent","ArticlePage","match","name","params","article","find","articleInfo","setArticleInfo","upvotes","comments","otherArticles","filter","title","content","map","paragraph","key"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAC/B,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AACA,QAAME,OAAO,GAAGL,cAAc,CAACM,IAAf,CAAoBD,OAAO,IAAIA,OAAO,CAACF,IAAvC,CAAhB;AAEA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC;AAAEa,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,QAAQ,EAAE;AAAxB,GAAD,CAA9C;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,cAAc,CAAC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAd;AACD,GAFQ,CAAT;AAIA,MAAI,CAACJ,OAAL,EAAc,oBAAO,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEd,QAAMM,aAAa,GAAGX,cAAc,CAACY,MAAf,CAAsBP,OAAO,IAAIA,OAAO,CAACF,IAAR,KAAiBA,IAAlD,CAAtB;AAEA,sBAEA;AAAA,4BACI;AAAA,gBAAKE,OAAO,CAACQ;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gDAA+BN,WAAW,CAACE,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIIJ,OAAO,CAACS,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,SAAD,EAAYC,GAAZ,kBACpB;AAAA,gBACKD;AADL,OAAQC,GAAR;AAAA;AAAA;AAAA;AAAA,YADA,CAJJ,eASQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATR,eAUQ,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEN;AAAxB;AAAA;AAAA;AAAA;AAAA,YAVR;AAAA,kBAFA;AAeH,CA7BD;;GAAMV,W;;KAAAA,W;AA+BN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ArticlesList from '../Components/ArticlesList';\r\nimport NotFoundPage from '../pages/NotFoundPage';\r\nimport articleContent from './article-content';\r\n\r\n\r\nconst ArticlePage = ({ match }) => {\r\n    const name = match.params.name;\r\n    const article = articleContent.find(article => article.name)\r\n\r\n    const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\r\n\r\n    useEffect(() => {\r\n      setArticleInfo({ upvotes: 3 });\r\n    });\r\n\r\n    if (!article) return <NotFoundPage />\r\n\r\n    const otherArticles = articleContent.filter(article => article.name !== name);\r\n\r\n    return (\r\n\r\n    <>\r\n        <h1>{article.title}</h1>\r\n        <p>This post has been upvoted {articleInfo.upvotes} times</p>\r\n        {\r\n        article.content.map((paragraph, key) => (\r\n        <p key={key}>\r\n            {paragraph}\r\n            </p>\r\n            ))}\r\n            <h2>Other Articles:</h2>\r\n            <ArticlesList articles={otherArticles} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ArticlePage;\r\n"]},"metadata":{},"sourceType":"module"}